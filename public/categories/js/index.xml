<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>js on wazanHub</title>
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> index 0802 commit
    <link>https://wazanhub.github.io/categories/js/</link>
    <description>Recent content in js on wazanHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 08 Jun 2020 12:18:28 +0800</lastBuildDate>
    
	<atom:link href="https://wazanhub.github.io/categories/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ES6知识点</title>
      <link>https://wazanhub.github.io/post/es6/</link>
      <pubDate>Mon, 08 Jun 2020 12:18:28 +0800</pubDate>
      
      <guid>https://wazanhub.github.io/post/es6/</guid>
<<<<<<< HEAD
=======
=======
    <link>http://localhost:1313/categories/js/</link>
    <description>Recent content in js on wazanHub</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Jun 2020 14:48:00 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式的理解</title>
      <link>http://localhost:1313/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Mon, 29 Jun 2020 14:48:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ES6知识点</title>
      <link>http://localhost:1313/post/es6/</link>
      <pubDate>Mon, 08 Jun 2020 12:18:28 +0800</pubDate>
      
      <guid>http://localhost:1313/post/es6/</guid>
>>>>>>> index 0802 commit
>>>>>>> index 0802 commit
      <description>es6</description>
    </item>
    
    <item>
      <title>js常用知识点</title>
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> index 0802 commit
      <link>https://wazanhub.github.io/post/js%E7%94%A8%E7%82%B9/</link>
      <pubDate>Mon, 08 Jun 2020 12:01:50 +0800</pubDate>
      
      <guid>https://wazanhub.github.io/post/js%E7%94%A8%E7%82%B9/</guid>
<<<<<<< HEAD
=======
=======
      <link>http://localhost:1313/post/js%E7%94%A8%E7%82%B9/</link>
      <pubDate>Mon, 08 Jun 2020 12:01:50 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js%E7%94%A8%E7%82%B9/</guid>
>>>>>>> index 0802 commit
>>>>>>> index 0802 commit
      <description>js用点</description>
    </item>
    
    <item>
      <title>JS深入系列</title>
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> index 0802 commit
      <link>https://wazanhub.github.io/post/js-sum/</link>
      <pubDate>Tue, 02 Jun 2020 22:58:09 +0800</pubDate>
      
      <guid>https://wazanhub.github.io/post/js-sum/</guid>
<<<<<<< HEAD
=======
=======
      <link>http://localhost:1313/post/js%E6%B7%B1%E5%85%A5/</link>
      <pubDate>Tue, 02 Jun 2020 22:58:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js%E6%B7%B1%E5%85%A5/</guid>
>>>>>>> index 0802 commit
>>>>>>> index 0802 commit
      <description>type 和 instanceof typeof 基本类型和引用类型
   类型 值     Undefined &amp;ldquo;undefined&amp;rdquo;   Null &amp;ldquo;object&amp;rdquo; (历史遗留问题)   Boolean &amp;ldquo;boolean&amp;rdquo;   Number &amp;ldquo;number&amp;rdquo;   String &amp;ldquo;string&amp;rdquo;   Object Array &amp;ldquo;object&amp;rdquo;    instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。
使用两者结合封装函数来判断类型
function getDataType(obj) { if(obj === null){ return &amp;quot;null&amp;quot;; }else if(typeof obj === &amp;quot;object&amp;quot;){ if(obj instanceof Array){ return &amp;quot;array&amp;quot;; }else{ return &amp;quot;object&amp;quot;; } }else{ return typeof obj; } } 原型 在典型的oop（面向对象编程）的语言中，如java,都存在类的概念，类就是对象的模板，对象就是类的实例。</description>
    </item>
    
  </channel>
</rss>